[project]
name = "cookiecutter-pypackage"
description = 'Cookiecutter template for a Python package'
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [{ name = "Nikita Belyaev", email = "belyaev.nikit@gmail.com" }]
maintainers = [{ name = "Nikita Belyaev", email = "belyaev.nikit@gmail.com" }]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python',
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development',
]
dynamic = ["version", "readme"]

[project.optional-dependencies]
dev = [
    "pytest==7.4.1",
    "tox==3.14.1",
    "cookiecutter>=1.4.0",
    "click==8.1.7",
    "pytest-cookies==0.7.0",
    "alabaster==0.7.12",
    "watchdog==0.9.0",
    "PyYAML==6.0.1",
    "bump-my-version==0.10.0",
]

[tool.setuptools.dynamic]
version = { file = "VERSION" }
readme = { file = ["README.rst"] }

[tool.bumpversion]
message = ":bookmark: Bump version: {current_version} → {new_version}"
tag = true
sign_tags = true
tag_message = ":bookmark: Bump version: {current_version} → {new_version}"
current_version = "0.1.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = [
    "{major}.{minor}.{patch}"
]
search = "{current_version}"
replace = "{new_version}"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
