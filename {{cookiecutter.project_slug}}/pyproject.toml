[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

{%- set license_classifiers = {
    "MIT license": "License :: OSI Approved :: MIT License",
    "BSD license": "License :: OSI Approved :: BSD License",
    "ISC license": "License :: OSI Approved :: ISC License (ISCL)",
    "Apache Software License 2.0": "License :: OSI Approved :: Apache Software License",
    "GNU General Public License v3": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
} %}

[project]
name = "{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}"
version = "{{ cookiecutter.version }}"
readme = "README.md"
requires-python = ">=3.8"
{%- if cookiecutter.open_source_license in license_classifiers %}
license = { file = "LICENSE" }
{%- endif %}
authors = [{ name = "{{ cookiecutter.full_name.replace('\"', '\\\"') }}", email = "{{ cookiecutter.email }}" },]
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
{%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [{% if cookiecutter.command_line_interface|lower == 'click' %}"Click>=7.0",{% endif %}]
dynamic = ["optional-dependencies"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ['requirements_dev.txt'] }

[project.urls]
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/blob/master/HISTORY.rst"

{% if cookiecutter.command_line_interface != "No command-line interface" -%}
[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli:main"
{%- endif %}

[tool.ruff]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "ANN", # flake8-annotations
    "FA",  # flake8-future-annotations
    "T20", # flake8-print
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PL",  # Pylint
]
ignore = [
    "E501",    # line too long, handled by black
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "ANN101",  # Missing type annotation for `self` in method
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  #  Missing type annotation for `**kwargs`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in ... TODO: It's better to bring it back
    "ANN102", # Missing type annotation for `cls` in classmethod
    "PLR0913", # Too many arguments to function call (7 > 5)
    "PLW1508", #Invalid type for environment variable default; expected `str` or `None`
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py38"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"

{% if cookiecutter.use_black == "y" -%}
[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py38', 'py39', 'py310', 'py311']
{%- endif %}

{% if cookiecutter.use_mypy == "y" -%}
[tool.mypy]
strict = true
{%- endif %}
